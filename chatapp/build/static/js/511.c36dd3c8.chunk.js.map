{"version":3,"file":"static/js/511.c36dd3c8.chunk.js","mappings":"+QAwFMA,EAAYC,EAAAA,GAAAA,IAAU,+6DAsH5B,EAxMiB,SAAH,GAMP,IALLC,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACAC,EAAU,EAAVA,WAEAC,GADM,EAANC,OACS,EAATD,WAEA,GAA8CE,EAAAA,EAAAA,eAASC,GAAU,eAA1DC,EAAe,KAAEC,EAAkB,KAC1C,GAAgDH,EAAAA,EAAAA,eAASC,GAAU,eAA5DG,EAAgB,KAAEC,EAAmB,KAC5C,GAA8CL,EAAAA,EAAAA,eAASC,GAAU,eAA1DK,EAAe,KAAEC,EAAkB,MAG1CC,EAAAA,EAAAA,YAAU,WACJZ,IACFO,EAAmBP,EAAYa,UAC/BJ,EAAoBT,EAAYc,aAEpC,GAAG,CAACd,IAOJ,OACE,8BACGM,GAAmBE,IAClB,UAACX,EAAS,YACR,gBAAKkB,UAAU,QAAO,UAEpB,qCAGF,gBAAKA,UAAU,WAAU,SACtBhB,EAASiB,KAAI,SAACC,EAASC,GACtB,OACE,iBACEH,UAAS,kBACPG,IAAUR,EAAkB,WAAa,IAG3CS,QAAS,YAtBC,SAACD,EAAOD,GAChCN,EAAmBO,GACnBjB,EAAWgB,EACX,CAoBgBG,CAAkBF,EAAOD,GACzBf,GACF,EAAE,WAEF,gBAAKa,UAAU,SAAQ,UAKrB,gBACEM,IAAKJ,EAAQH,YACbQ,IAAI,cAGR,gBAAKP,UAAU,WAAU,UACvB,wBAAKE,EAAQJ,eAjBVK,EAqBX,UAmBZ,ECvDMK,EAAmBzB,EAAAA,GAAAA,IAAU,41KAiRnC,EA7SgB,SAAH,GAAuB,IAAlBE,EAAW,EAAXA,YAIhB,OACE,SAACuB,EAAgB,WACf,iBAAKR,UAAU,YAAW,WACxB,gBAAKA,UAAU,OAAM,UACnB,iBAAKA,UAAU,OAAM,WACnB,gBAAKA,UAAU,QAAO,UACpB,gBAAKA,UAAU,cAEjB,gBAAKA,UAAU,SACf,iBAAKA,UAAU,OAAM,WACnB,gBAAKA,UAAU,SACf,gBAAKA,UAAU,MAAK,UAClB,gBAAKA,UAAU,sBAKvBf,IAAe,qCAAW,gCAAQA,EAAYa,SAAQ,cAK9D,E,iDC6BMW,EAAqB1B,EAAAA,GAAAA,IAAU,uhFAwGrC,EA5JkB,SAAH,GAA2B,IAArB2B,EAAa,EAAbA,cAEjB,GAA8CrB,EAAAA,EAAAA,WAAS,GAAM,eAAtDsB,EAAe,KAAEC,EAAkB,KAC1C,GAAsBvB,EAAAA,EAAAA,UAAS,IAAG,eAA3BwB,EAAG,KAAEC,EAAM,KAoBpB,OACE,UAACL,EAAkB,YACjB,gBAAKT,UAAU,kBAAiB,UAC9B,iBAAKA,UAAU,QAAO,WACpB,SAAC,MAAgB,CAACA,UAAU,aAAaI,QAtBtB,WACrBQ,GAAoBD,EACxB,IAsBQA,IAAmB,SAAC,IAAM,CAACI,aApBV,SAACC,EAAOC,GAC7BH,EAAOD,EAAII,EAAMA,MACrB,UAuBE,kBAAMjB,UAAU,kBAAkBkB,SAAU,SAACC,GAAC,OAAYA,EAnBlDC,sBACHP,EAAIQ,OAAO,IACVX,EAAcG,GACdC,EAAO,KAgB+C,EAAC,WAC3D,kBACEQ,KAAK,OACLC,KAAK,OACLC,GAAG,OACHC,YAAY,yBACZC,MAAOb,EACPc,SAAU,SAACR,GAAKL,EAAOK,EAAES,OAAOF,MAAM,EACtCG,aAAa,SAEf,mBAAQP,KAAK,SAAQ,UACnB,SAAC,MAAQ,CAACtB,UAAU,qBAK9B,E,UCpCM8B,EAAa/C,EAAAA,GAAAA,IAAU,0RAiB7B,EAhCe,WAEX,IAAMgD,GAAWC,EAAAA,EAAAA,MACXC,EAAW,yCAAG,mFAChBC,aAAaC,QACbJ,EAAS,UAAU,2CACtB,kBAHgB,mCAKnB,OACE,SAACD,EAAU,CAAC1B,QAAS6B,EAAY,UAC7B,SAAC,MAAU,CAACjC,UAAU,UAG9B,ECyGMoC,EAAgBrD,EAAAA,GAAAA,IAAU,6iDA6EhC,EAhMsB,SAAH,GAA8C,IAAxCsD,EAAW,EAAXA,YAAapD,EAAW,EAAXA,YAAaqD,EAAM,EAANA,OACjD,GAAgCjD,EAAAA,EAAAA,UAAS,IAAG,eAArCkD,EAAQ,KAAEC,EAAW,KAC5B,GAA4CnD,EAAAA,EAAAA,UAAS,MAAK,eAAnDoD,EAAc,KAAEC,EAAiB,KAClCC,GAAYC,EAAAA,EAAAA,WAElB/C,EAAAA,EAAAA,YAAU,WACR,IAAMgD,EAAc,yCAAG,yGACEC,EAAAA,EAAAA,KAAWC,EAAAA,GAAoB,CACpDC,KAAM/D,EAAYgE,IAClBC,GAAIb,EAAYY,MACf,KAAD,EAHIE,EAAQ,OAIdX,EAAYW,EAASC,MAAM,2CAC5B,kBANmB,mCAOhBf,GACFQ,GAEJ,GAAG,CAACR,IAEJ,IAAM3B,EAAa,yCAAG,WAAOG,GAAG,sEAa3B,OAZH2B,EAAY,GAAD,eACND,GAAQ,CACX,CACEc,UAAU,EACVC,QAASzC,MAIbyB,EAAOiB,QAAQC,KAAK,WAAY,CAC9BN,GAAIb,EAAYY,IAChBD,KAAM/D,EAAYgE,IAClBK,QAASzC,IACR,SAEGiC,EAAAA,EAAAA,KAAWW,EAAAA,GAAkB,CACjCT,KAAM/D,EAAYgE,IAClBC,GAAIb,EAAYY,IAChBK,QAASzC,IACR,KAAD,sCACH,gBApBkB,sCAyDnB,OAtBAhB,EAAAA,EAAAA,YAAU,WACJyC,EAAOiB,SACTjB,EAAOiB,QAAQG,GAAG,eAAe,SAACN,GAChCV,EAAkB,CAChBW,UAAU,EACVL,KAAMI,EAAKJ,KACXM,QAASF,EAAKE,SAElB,GAEJ,GAAG,KAEHzD,EAAAA,EAAAA,YAAU,WACJ4C,GAAkBA,EAAeO,OAASX,EAAYY,KACxDT,GAAY,SAACmB,GAAI,wBAASA,GAAI,CAAE,CAACN,SAAUZ,EAAeY,SAAUC,QAASb,EAAea,UAAQ,GAExG,GAAG,CAACb,KAEJ5C,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACG,QAAjB,EAAA8C,EAAUY,eAAO,OAAjB,EAAmBK,eAAe,CAAEC,UAAW,UACjD,GAAG,CAACtB,KAGF,UAACH,EAAa,YACZ,iBAAKpC,UAAU,cAAa,WAC1B,iBAAKA,UAAU,eAAc,WAC3B,gBAAKA,UAAU,SAAQ,UACrB,gBACEM,IAAK+B,EAAYtC,YACjBQ,IAAI,cAGR,gBAAKP,UAAU,WAAU,UACvB,wBAAKqC,EAAYvC,iBAGrB,SAAC,EAAM,QAGT,gBAAKE,UAAU,gBAAe,SAC3BuC,EAAStC,KAAI,SAACqD,EAASnD,GACtB,OAEE,gBAAK2D,IAAKnB,EAAU,UAClB,gBACE3C,UAAS,kBACPsD,EAAQD,SAAW,SAAW,YAC7B,UAEH,gBAAKrD,UAAU,UAAS,UACtB,uBAAIsD,EAAQA,eAPQnD,EAY9B,OAEF,SAAC,EAAS,CAACO,cAAeA,MAGhC,E,UCjBMqD,EAAQhF,EAAAA,GAAAA,IAAU,s9CA6ExB,EA3Ka,WACX,OAAgCM,EAAAA,EAAAA,UAAS,IAAG,eAArCL,EAAQ,KAAEgF,EAAW,KAE5B,GAAsC3E,EAAAA,EAAAA,eAASC,GAAU,eAAlD2E,EAAW,KAAEC,EAAc,KAElC,GAAsC7E,EAAAA,EAAAA,eAASC,GAAU,eAAlD6E,EAAW,KAAEC,EAAc,KAE5BrC,GAAWC,EAAAA,EAAAA,MAEXM,GAASM,EAAAA,EAAAA,WAEf/C,EAAAA,EAAAA,YAAU,WACoB,aAM3B,OAN2B,0BAA5B,sFACOqC,aAAamC,QAAQ,iBAAiB,CAAD,eACxCtC,EAAS,UAAU,sBAEL,OAFK,KAEnBmC,EAAc,SAAOI,KAAKC,MAAMrC,aAAamC,QAAQ,kBAAiB,8EAEzE,uBAPc,WACa,wBAQ5BG,EACF,GAAG,KAEH3E,EAAAA,EAAAA,YAAU,WACJoE,IACF3B,EAAOiB,SAAUkB,EAAAA,EAAAA,IAAGC,EAAAA,IACpBpC,EAAOiB,QAAQC,KAAK,WAAYS,EAAYhB,KAEhD,GAAG,CAACgB,KAEJpE,EAAAA,EAAAA,YAAU,WACqB,aAU5B,OAV4B,0BAA7B,6FACMoE,EAAY,CAAD,mBACTA,EAAYU,iBAAiB,CAAD,+BACX7B,EAAAA,EAAAA,IAAU,GAAD,OAAI8B,EAAAA,GAAa,YAAIX,EAAYhB,MAAO,KAAD,EAA7DG,EAAI,OAEVY,EAAYZ,EAAKA,MAAM,sBAEvBrB,EAAS,cAAc,4CAG5B,uBAXc,WACc,wBAY7B8C,EACF,GAAG,CAACZ,IAEJ,IAIA,GAA4B5E,EAAAA,EAAAA,WAAS,GAAK,eAAnCD,EAAM,KAAED,EAAS,KAElB2F,EAAgB,WACF3F,GAAP,IAAXC,EACF,EAEA,OACE,SAAC2E,EAAK,WACJ,iBAAK/D,UAAU,YAAW,WACxB,gBAAKA,UAAU,SAASI,QAAS0E,EAAc,SAC5C1F,GACC,cAAGY,UAAU,iBAEb,cAAGA,UAAU,kBAIjB,gBAAKA,UAAS,kBAAuB,GAAVZ,EAAiB,SAAW,IAAK,UAC1D,SAAC,EAAQ,CACPJ,SAAUA,EACVC,YAAagF,EACb/E,WAzBe,SAAC6F,GACxBX,EAAeW,EACjB,EAwBU5F,UAAWA,WAGEG,IAAhB6E,GACC,SAAC,EAAO,CAAClF,YAAagF,KAEtB,SAAC,EAAa,CACZ5B,YAAa8B,EACblF,YAAagF,EACb3B,OAAQA,KAIZ,gBACEtC,UAAS,0BAA+B,GAAVZ,EAAiB,SAAW,IAC1DgB,QAAS0E,QAKnB,C,wMCjGO,IAAMJ,EAAO,iDAEPM,EAAa,UAAMN,EAAI,iBAEvBO,EAAU,UAAMP,EAAI,cAEpBQ,EAAc,UAAMR,EAAI,kBAExBE,EAAa,UAAMF,EAAI,iBAEvBjB,EAAgB,UAAMiB,EAAI,mBAE1B3B,EAAkB,UAAM2B,EAAI,qB","sources":["Components/Contacts.jsx","Components/Welcome.jsx","Components/ChatInput.jsx","Components/Logout.jsx","Components/ChatContainer.jsx","Pages/Chat.jsx","Utils/APIRoutes.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport logo from \"../assets/logo.png\";\r\n\r\nconst Contacts = ({\r\n  contacts,\r\n  currentuser,\r\n  changechat,\r\n  isOpen,\r\n  setIsopen,\r\n}) => {\r\n  const [currentUsername, setcurrentUsername] = useState(undefined);\r\n  const [currentUserimage, setcurrentUserimage] = useState(undefined);\r\n  const [currentSelected, setcurrentSelected] = useState(undefined);\r\n  // const [toggle, settoggle] = useState(true);/\r\n\r\n  useEffect(() => {\r\n    if (currentuser) {\r\n      setcurrentUsername(currentuser.username);\r\n      setcurrentUserimage(currentuser.avatarImage);\r\n    }\r\n  }, [currentuser]);\r\n\r\n  const changeCurrentChat = (index, contact) => {\r\n    setcurrentSelected(index);\r\n    changechat(contact);\r\n    };\r\n\r\n  return (\r\n    <>\r\n      {currentUsername && currentUserimage && (\r\n        <Container>\r\n          <div className=\"brand\">\r\n            {/* <img src={logo} alt=\"Logo\" /> */}\r\n            <h2>Liffy</h2>\r\n          </div>\r\n\r\n          <div className=\"contacts\">\r\n            {contacts.map((contact, index) => {\r\n              return (\r\n                <div\r\n                  className={`contact ${\r\n                    index === currentSelected ? \"selected\" : \"\"\r\n                  }`}\r\n                  key={index}\r\n                  onClick={() => {\r\n                    changeCurrentChat(index, contact);\r\n                    setIsopen();\r\n                  }}\r\n                >\r\n                  <div className=\"avatar\">\r\n                    {/* <img\r\n                      src={`data:image/svg+xml;base64,${contact.avatarImage}`}\r\n                      alt=\"avatar\"\r\n                    /> */}\r\n                    <img\r\n                      src={contact.avatarImage}\r\n                      alt=\"avatar\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"username\">\r\n                    <h3>{contact.username}</h3>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* <div className=\"current-user\">\r\n            <div className=\"avatar\">\r\n              <img\r\n                src={`data:image/svg+xml;base64,${currentUserimage}`}\r\n                alt=\"avatar\" \r\n              />\r\n            </div>\r\n            <div className=\"username\">\r\n              <h2>{currentUsername}</h2>\r\n            </div>\r\n          </div> */}\r\n          {/* </div> */}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  z-index: 2;\r\n\r\n  // .sidebar {\r\n  display: grid;\r\n  grid-template-rows: 10% 85%;\r\n  overflow: hidden;\r\n  background-color: #080420;\r\n  height: 100vh;\r\n  z-index: 3;\r\n  // }\r\n\r\n  .brand {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 1rem;\r\n\r\n    color: white;\r\n\r\n    img {\r\n      height: 3rem;\r\n    }\r\n\r\n    h3 {\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n  .contacts {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    overflow: auto;\r\n    gap: 0.8rem;\r\n    overflow-x: hidden;\r\n\r\n    scrollbar-width: thin;\r\n    scrollbar-color: #ffffff39 transparent;\r\n\r\n    &::-webkit-scrollbar {\r\n      width: 0.4rem;\r\n      &-thumb {\r\n        background-color: #ffffff39;\r\n        width: 0.1rem;\r\n        border-radius: 1rem;\r\n      }\r\n    }\r\n\r\n    .contact {\r\n      background-color: #ffffff38;\r\n      min-height: 5rem;\r\n      width: 90%;\r\n      cursor: pointer;\r\n      border-radius: 0.2rem;\r\n      padding: 0.4rem;\r\n      gap: 1rem;\r\n      display: flex;\r\n      align-items: center;\r\n      transition: 0.5s ease-in-out;\r\n\r\n      .avatar {\r\n        img {\r\n          height: 3rem;\r\n        }\r\n      }\r\n\r\n      .username {\r\n\r\n        overflow: hidden;\r\n\r\n        h3 {\r\n          color: white;\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    .selected {\r\n      background-color: #9186f3;\r\n    }\r\n  }\r\n\r\n  .current-user {\r\n    background-color: #0d0d30;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 2rem;\r\n\r\n    .avatar {\r\n      img {\r\n        height: 4rem;\r\n        max-inline-size: 100%;\r\n      }\r\n    }\r\n\r\n    .username {\r\n      h2 {\r\n        color: white;\r\n      }\r\n    }\r\n\r\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n      gap: 0.5rem;\r\n      .username {\r\n        h2 {\r\n          font-size: 1rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    position: absolute;\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Welcome = ({currentuser}) => {\r\n\r\n    \r\n\r\n  return (\r\n    <WelcomeContainer>\r\n      <div className=\"character\">\r\n        <div className=\"ball\">\r\n          <div className=\"char\">\r\n            <div className=\"inner\">\r\n              <div className=\"button\"></div>\r\n            </div>\r\n            <div className=\"top\"></div>\r\n            <div className=\"head\">\r\n              <div className=\"eye\"></div>\r\n              <div className=\"eye\">\r\n                <div className=\"monicle\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      { currentuser && <b>Welcome <span> {currentuser.username} </span></b>\r\n      }\r\n      </div>\r\n    </WelcomeContainer>\r\n  );\r\n};\r\n\r\nconst WelcomeContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .character{ \r\n    position: absolute;\r\n  }\r\n\r\n\r\n  .char {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: inherit;\r\n    width: inherit;\r\n    border-radius: 50%;\r\n    transform: rotate(5deg);\r\n    -webkit-animation: move 5s linear forwards;\r\n    -webkit-animation-delay: 1.5s;\r\n  }\r\n  @-webkit-keyframes move {\r\n    0% {\r\n      transform: rotate(5deg);\r\n    }\r\n    10% {\r\n      transform: rotate(-2deg);\r\n    }\r\n    15% {\r\n      transform: rotate(1deg);\r\n    }\r\n    17%,\r\n    100% {\r\n      transform: rotate(0);\r\n    }\r\n  }\r\n  .ball {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    height: 200px;\r\n    width: 200px;\r\n    border-radius: 50%;\r\n    -webkit-animation: fadein 1.5s linear forwards;\r\n  }\r\n  @-webkit-keyframes fadein {\r\n    0% {\r\n      opacity: 0;\r\n      box-shadow: 0 0 20px 10px rgba(0, 0, 0, 0);\r\n      background: rgba(0, 0, 0, 0);\r\n    }\r\n    40% {\r\n      opacity: 1;\r\n      box-shadow: 0 0 20px 10px rgba(0, 0, 0, 0);\r\n      background: rgba(0, 0, 0, 0);\r\n    }\r\n    80% {\r\n      box-shadow: 0 0 20px 10px rgba(0, 0, 0, 0.6);\r\n    }\r\n    100% {\r\n      box-shadow: 0 0 20px 10px rgba(0, 0, 0, 0.6);\r\n      background: rgba(0, 0, 0, 0.4);\r\n    }\r\n  }\r\n  .inner {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: inherit;\r\n    width: inherit;\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n  }\r\n  .inner:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 50%;\r\n    height: 50%;\r\n    background: linear-gradient(\r\n      to right,\r\n      rgba(128, 128, 128, 1) 0%,\r\n      rgba(128, 128, 128, 1) 49%,\r\n      rgba(255, 255, 255, 1) 49%,\r\n      rgba(255, 255, 255, 1) 51%,\r\n      rgba(128, 128, 128, 1) 51%,\r\n      rgba(128, 128, 128, 1) 100%\r\n    );\r\n    /* W3C */\r\n    top: 50%;\r\n    left: 25%;\r\n    border-radius: 10px 10px 0 0;\r\n    box-shadow: inset 0 0 20px 2px rgba(0, 0, 0, 0.4);\r\n  }\r\n  .button {\r\n    position: absolute;\r\n    top: 140px;\r\n    left: 52%;\r\n    height: 5px;\r\n    width: 5px;\r\n    background: black;\r\n    box-shadow: 0 20px black, 0 40px black;\r\n    z-index: 10;\r\n    border-radius: 50%;\r\n  }\r\n  .inner:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 55%;\r\n    left: 45%;\r\n    width: 0;\r\n    border: 10px solid white;\r\n    border-top-color: transparent;\r\n    border-left-color: transparent;\r\n    transform: rotate(45deg);\r\n  }\r\n  /*head*/\r\n  .head {\r\n    position: absolute;\r\n    height: 120px;\r\n    width: 50%;\r\n    background: chocolate;\r\n    top: 0;\r\n    left: 25%;\r\n    border-radius: 30% 30% 0 0;\r\n  }\r\n  .eye {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 25%;\r\n    width: 20px;\r\n    height: 30px;\r\n    background: white;\r\n    border-radius: 40% 40% 0 0;\r\n    -webkit-animation: blink 3s infinite;\r\n    animation: blink 3s infinite;\r\n  }\r\n  .eye:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 8px;\r\n    height: 10px;\r\n    width: 4px;\r\n    background: black;\r\n  }\r\n  .eye:nth-child(2) {\r\n    left: calc(30% + 30px);\r\n  }\r\n  @-webkit-keyframes blink {\r\n    0% {\r\n      height: 30px;\r\n      top: 50%;\r\n    }\r\n    5% {\r\n      top: calc(50% + 30px);\r\n      height: 0;\r\n    }\r\n    6% {\r\n      height: 30px;\r\n      top: 50%;\r\n    }\r\n    100% {\r\n      height: 30px;\r\n      top: 50%;\r\n    }\r\n  }\r\n  @keyframes blink {\r\n    0% {\r\n      height: 30px;\r\n      top: 50%;\r\n    }\r\n    5% {\r\n      top: calc(50% + 30px);\r\n      height: 0;\r\n    }\r\n    6% {\r\n      height: 30px;\r\n      top: 50%;\r\n    }\r\n    100% {\r\n      height: 30px;\r\n      top: 50%;\r\n    }\r\n  }\r\n  .monicle {\r\n    position: absolute;\r\n    height: 30px;\r\n    width: 30px;\r\n    left: -5px;\r\n    bottom: -5px;\r\n    border-radius: 50%;\r\n    background: rgba(200, 200, 200, 0.8);\r\n    box-shadow: inset 0 0 5px black;\r\n  }\r\n  .monicle:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 25%;\r\n    width: 50%;\r\n    left: 25%;\r\n    top: 25%;\r\n    border-bottom: 3px solid white;\r\n    border-top: 3px solid white;\r\n    opacity: 0.4;\r\n    -webkit-transform: rotate(30deg);\r\n    transform: rotate(30deg);\r\n  }\r\n  .monicle:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 35px;\r\n    width: 20px;\r\n    border-radius: 50%;\r\n    border-left: 1px dotted white;\r\n    bottom: -25px;\r\n    right: -10px;\r\n    -webkit-transform: rotate(-30deg);\r\n    transform: rotate(-30deg);\r\n  }\r\n  /*hat*/\r\n  .top {\r\n    height: 20px;\r\n    width: 50%;\r\n    background: black;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    bottom: 140%;\r\n    left: 30%;\r\n    box-shadow: inset 0 0 2px lightgray;\r\n    z-index: 12;\r\n    transform: rotate(5deg);\r\n    transform-origin: top left;\r\n  }\r\n  .top:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    height: 100px;\r\n    width: 100%;\r\n    background: black;\r\n    z-index: -1;\r\n  }\r\n  .top:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 84px;\r\n    left: -20%;\r\n    height: 70%;\r\n    width: 100%;\r\n    border-radius: 50%;\r\n    z-index: -2;\r\n    border: 20px solid black;\r\n    box-shadow: inset 0 0 0 1px gray, inset 0 0 0 10px black,\r\n      0 5px 5px 2px rgba(0, 0, 0, 0.4);\r\n  }\r\n  b {\r\n    position: absolute;\r\n    top: calc(50% + 150px);\r\n    left: 50%;\r\n    width: max-content;\r\n    text-align: center;\r\n    font-size: 30px;\r\n    color: antiquewhite;\r\n    transform: translate(-50%, -50%);\r\n\r\n    span{\r\n        color: red;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Welcome;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BsEmojiSmileFill } from \"react-icons/bs\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport Picker from \"emoji-picker-react\"\r\n\r\nconst ChatInput = ({ handleSendMsg }) => {\r\n\r\n    const [showEmojiPicker, setshowEmojiPicker] = useState(false)\r\n    const [msg, setmsg] = useState(\"\")\r\n\r\n    const handleEmojiPicker =()=>{\r\n        setshowEmojiPicker(!showEmojiPicker);\r\n    }\r\n\r\n    const handleEmojiClick = (event, emoji)=>{\r\n        setmsg(msg+emoji.emoji);\r\n    }\r\n\r\n\r\n    const sendChat = (event) =>{\r\n        event.preventDefault();\r\n        if(msg.length>0){\r\n            handleSendMsg(msg);\r\n            setmsg(\"\");\r\n        }\r\n    }\r\n\r\n\r\n  return (\r\n    <ChatInputContainer>\r\n      <div className=\"emoji-container\">\r\n        <div className=\"emoji\">\r\n          <BsEmojiSmileFill className=\"emoji-icon\" onClick={handleEmojiPicker} />\r\n          {\r\n            showEmojiPicker && <Picker onEmojiClick={handleEmojiClick} />\r\n          }          \r\n        </div>\r\n      </div>\r\n\r\n      <form className=\"input-container\" onSubmit={(e)=>sendChat(e)}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"chat\"\r\n          id=\"chat\"\r\n          placeholder=\"type your message here\"\r\n          value={msg}\r\n          onChange={(e)=>{setmsg(e.target.value)}}\r\n          autoComplete=\"off\"\r\n        />\r\n        <button type=\"submit\">\r\n          <IoMdSend className=\"chat-icon\" />\r\n        </button>\r\n      </form>\r\n    </ChatInputContainer>\r\n  );\r\n};\r\n\r\nconst ChatInputContainer = styled.div`\r\n\r\n    display: grid;\r\n    grid-template-columns: 5% 95%;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #080420;\r\n    padding: 0 2rem;\r\n    // padding-bottom: 0.3rem;\r\n    height: 12%;\r\n    gap: 1rem;\r\n    .emoji-container{\r\n        display: flex;\r\n        align-items: center;\r\n        color: white;\r\n        gap: 1rem;\r\n        .emoji{\r\n            position: relative;\r\n\r\n            .emoji-icon{\r\n                font-size: 1.5rem;\r\n                color: #ffff00c8;\r\n                cursor: pointer;\r\n            }\r\n\r\n            .emoji-picker-react{\r\n                position: absolute;\r\n                height: 20rem;\r\n                width: 15rem;\r\n                bottom: 2.6rem;\r\n                background-color: #080420;\r\n                box-shadow: 0 5px 10px #9a86f3; \r\n                \r\n                \r\n                .emoji-scroll-wrapper::-webkit-scrollbar{\r\n                    background-color: #080420;\r\n                    width: 5px;\r\n                    &-thumb{\r\n                        background-color: #9186f3;     \r\n                    }\r\n                }\r\n                .emoji-categories{\r\n                    button{\r\n                        filter: contrast(0);\r\n                    }\r\n                }\r\n                .emoji-search{\r\n                    background-color: transparent;\r\n                    border-color: #9186f3;\r\n                }\r\n\r\n                .emoji-group:before{\r\n                    background-color: #080420;\r\n                }\r\n                \r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    .input-container{\r\n\r\n        display: flex;\r\n        width: 100%;\r\n        border-radius: 2rem;\r\n        align-items: center;\r\n        gap: 1rem;\r\n        background-color: #ffffff38;\r\n\r\n        input{\r\n            width: 90%;\r\n            padding: 0.5rem;\r\n            background-color: transparent;\r\n            color: white;\r\n            border: none;\r\n            padding-left: 1rem;\r\n            font-size: 1.2rem;\r\n\r\n            &::selection{\r\n                background-color: #9186f3;\r\n            }\r\n            &:focus{\r\n                outline: none;\r\n            }\r\n        }\r\n\r\n        button{\r\n            padding: 0.3rem 2rem;\r\n            background-color: #9a86f3;\r\n            border-radius: 2rem;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            border: none;\r\n            .chat-icon{\r\n                font-size: 1.5rem;\r\n                color: white;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n`;\r\n\r\nexport default ChatInput;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BiPowerOff } from \"react-icons/bi\"\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Logout = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const handleClick = async ()=>{\r\n        localStorage.clear();\r\n        navigate(\"/login\");\r\n    }\r\n\r\n  return (\r\n    <LogoutCont onClick={handleClick}> \r\n        <BiPowerOff className='icon' />\r\n    </LogoutCont>\r\n  )\r\n}\r\n\r\nconst LogoutCont = styled.div`\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0.5rem;\r\n    border-radius: 0.5rem;\r\n    background-color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n    .icon{\r\n        font-size: 1.3rem;\r\n        \r\n    }\r\n\r\n`;\r\n\r\nexport default Logout","import axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { getAllMessageRoute, sendMessageRoute } from \"../Utils/APIRoutes\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport Logout from \"./Logout\";\r\n// import {v4 as uuidv4 } from \"uuid\";\r\n\r\nconst ChatContainer = ({ currentchat, currentuser, socket }) => {\r\n  const [messages, setmessages] = useState([]);\r\n  const [arrivalMessage, setarrivalMessage] = useState(null);\r\n  const scrollRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const getallmessages = async () => {\r\n      const response = await axios.post(getAllMessageRoute, {\r\n        from: currentuser._id,\r\n        to: currentchat._id,\r\n      });\r\n      setmessages(response.data);\r\n    };\r\n    if (currentchat) {\r\n      getallmessages();\r\n    }\r\n  }, [currentchat]);\r\n\r\n  const handleSendMsg = async (msg) => {\r\n    setmessages([\r\n      ...messages,\r\n      {\r\n        fromSelf: true,\r\n        message: msg,\r\n      },\r\n    ]);\r\n\r\n    socket.current.emit(\"send-msg\", {\r\n      to: currentchat._id,\r\n      from: currentuser._id,\r\n      message: msg,\r\n    });\r\n\r\n    await axios.post(sendMessageRoute, {\r\n      from: currentuser._id,\r\n      to: currentchat._id,\r\n      message: msg,\r\n    });\r\n  };\r\n\r\n  // socket.current.on(\"msg-recieve\", (data) => {\r\n  //   if (currentchat._id === data.from) {\r\n  //     console.log(\"Hello\");\r\n  //     setmessages([\r\n  //       ...messages,\r\n  //       {\r\n  //         fromSelf: false,\r\n  //         message: data.message,\r\n  //       },\r\n  //     ]);\r\n  //   }\r\n  // });\r\n\r\n  useEffect(() => {\r\n    if (socket.current) {\r\n      socket.current.on(\"msg-recieve\", (data) => {\r\n        setarrivalMessage({\r\n          fromSelf: false,\r\n          from: data.from,\r\n          message: data.message,\r\n        });\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (arrivalMessage && arrivalMessage.from === currentchat._id) {\r\n      setmessages((prev) => [...prev, {fromSelf: arrivalMessage.fromSelf, message: arrivalMessage.message} ]);\r\n    }\r\n  }, [arrivalMessage]);\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behaviour: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <Chatcontainer>\r\n      <div className=\"chat-header\">\r\n        <div className=\"user-details\">\r\n          <div className=\"avatar\">\r\n            <img\r\n              src={currentchat.avatarImage}\r\n              alt=\"avatar\"\r\n            />\r\n          </div>\r\n          <div className=\"username\">\r\n            <h3>{currentchat.username}</h3>\r\n          </div>\r\n        </div>\r\n        <Logout />\r\n      </div>\r\n\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message, index) => {\r\n          return (\r\n            // <div ref={scrollRef} key={uuidv4()}>\r\n            <div ref={scrollRef} key={index}>\r\n              <div\r\n                className={`message ${\r\n                  message.fromSelf ? \"sended\" : \"recieved\"\r\n                }`}\r\n              >\r\n                <div className=\"content\">\r\n                  <p>{message.message}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <ChatInput handleSendMsg={handleSendMsg} />\r\n    </Chatcontainer>\r\n  );\r\n};\r\n\r\nconst Chatcontainer = styled.div`\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  // padding-top: 1rem;\r\n  .chat-header {\r\n    background-color: #02163b;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0.5rem 2rem;\r\n    .user-details {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 1rem;\r\n      margin-left: 2rem;\r\n      .avatar {\r\n        img {\r\n          height: 3rem;\r\n        }\r\n      }\r\n      .username {\r\n        h3 {\r\n          color: white;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .chat-messages {\r\n    padding: 1rem 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 75%;\r\n    gap: 1rem;\r\n    overflow: auto;\r\n    .message {\r\n      display: flex;\r\n      align-items: center;\r\n      .content {\r\n        max-width: 9s0%;\r\n        overflow-wrap: break-word;\r\n        color: white;\r\n        padding: 1rem;\r\n        font-size: 1.1rem;\r\n        border-top-left-radius: 1rem;\r\n        border-top-right-radius: 1rem;\r\n      }\r\n    }\r\n    .sended {\r\n      justify-content: flex-end;\r\n      .content {\r\n        background-color: #4f04ff21;\r\n        border-bottom-left-radius: 1rem;\r\n      }\r\n    }\r\n    .recieved {\r\n      justify-content: flex-start;\r\n      .content {\r\n        background-color: #9900ff20;\r\n        border-bottom-right-radius: 1rem;\r\n      }\r\n    }\r\n\r\n    scrollbar-width: thin;\r\n    scrollbar-color: #e3e3e3 transparent;\r\n\r\n    &::-webkit-scrollbar {\r\n      width: 0.2rem;\r\n      &-thumb {\r\n        background-color: #e3e3e3;\r\n        width: 0.1rem;\r\n        border-radius: 1rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ChatContainer;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { allUsersRoute, host } from \"../Utils/APIRoutes\";\r\nimport Contacts from \"../Components/Contacts\";\r\nimport Welcome from \"../Components/Welcome\";\r\nimport ChatContainer from \"../Components/ChatContainer\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst Chat = () => {\r\n  const [contacts, setcontacts] = useState([]);\r\n\r\n  const [currentUser, setcurrentUser] = useState(undefined);\r\n\r\n  const [currentChat, setcurrentChat] = useState(undefined);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const socket = useRef();\r\n\r\n  useEffect(() => {\r\n    async function useeffectfunc() {\r\n      if (!localStorage.getItem(\"chat-app-user\")) {\r\n        navigate(\"/login\");\r\n      } else {\r\n        setcurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")));\r\n      }\r\n    }\r\n\r\n    useeffectfunc();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      socket.current = io(host);\r\n      socket.current.emit(\"add-user\", currentUser._id);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    async function useeffectfunca() {\r\n      if (currentUser) {\r\n        if (currentUser.isAvatarImageSet) {\r\n          const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\r\n\r\n          setcontacts(data.data);\r\n        } else {\r\n          navigate(\"/setavatar\");\r\n        }\r\n      }\r\n    }\r\n\r\n    useeffectfunca();\r\n  }, [currentUser]);\r\n\r\n  const handlechatChange = (chat) => {\r\n    setcurrentChat(chat);\r\n  };\r\n\r\n  const [isOpen, setIsopen] = useState(true);\r\n\r\n  const ToggleSidebar = () => {\r\n    isOpen === true ? setIsopen(false) : setIsopen(true);\r\n  };\r\n\r\n  return (\r\n    <Chats>\r\n      <div className=\"container\">\r\n        <div className=\"toggle\" onClick={ToggleSidebar}>\r\n          {isOpen ? (\r\n            <i className=\"fa fa-close\"></i>\r\n          ) : (\r\n            <i className=\"fa fa-bars\"></i>\r\n          )}\r\n        </div>\r\n\r\n        <div className={`sidebar ${isOpen == true ? \"active\" : \"\"}`}>\r\n          <Contacts\r\n            contacts={contacts}\r\n            currentuser={currentUser}\r\n            changechat={handlechatChange}\r\n            setIsopen={setIsopen}\r\n          />\r\n        </div>\r\n        {currentChat === undefined ? (\r\n          <Welcome currentuser={currentUser} />\r\n        ) : (\r\n          <ChatContainer\r\n            currentchat={currentChat}\r\n            currentuser={currentUser}\r\n            socket={socket}\r\n          />\r\n        )}\r\n\r\n        <div\r\n          className={`sidebar-overlay ${isOpen == true ? \"active\" : \"\"}`}\r\n          onClick={ToggleSidebar}\r\n        ></div>\r\n      </div>\r\n    </Chats>\r\n  );\r\n};\r\n\r\nconst Chats = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  height: 100vh;\r\n  weight: 100vw;\r\n  background-color: #000000;\r\n\r\n  .toggle {\r\n    display: none;\r\n    position: absolute;\r\n    z-index: 5;\r\n    background: white;\r\n    top: 2%;\r\n    padding: 3px 6px;\r\n    left: 5%;\r\n    border-radius: 1vh;\r\n\r\n    i {\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n\r\n  .container {\r\n    height: 100vh;\r\n    width: 100vw;\r\n    background-color: #00000082;\r\n    display: grid;\r\n    grid-template-columns: 25% 75%;\r\n\r\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n      grid-template-columns: 35% 65%;\r\n    }\r\n\r\n    @media screen and (max-width: 500px) {\r\n      grid-template-columns: auto;\r\n\r\n      .toggle {\r\n        display: block;\r\n      }\r\n\r\n      .sidebar {\r\n        width: 280px;\r\n        box-shadow: 0px 4px 8px rgb(0 0 0 / 16%);\r\n        background-color: #fff;\r\n        position: fixed;\r\n        top: 0;\r\n        left: -100%;\r\n        z-index: 1;\r\n        transition: 0.5s;\r\n      }\r\n\r\n      .sidebar-overlay {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: rgba(0, 0, 0, 0.4);\r\n        transition: 0.5s;\r\n        opacity: 0;\r\n        visibility: hidden;\r\n      }\r\n      .sidebar-overlay.active {\r\n        opacity: 1;\r\n        visibility: visible;\r\n      }\r\n\r\n      .active {\r\n        left: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Chat;\r\n","// for developement\r\n// export const host = \"http://localhost:5000\";\r\n\r\n// for deployment\r\n// export const host = \"https://chatapp-72oa.onrender.com\";\r\nexport const host = \"https://chatapi-production-4047.up.railway.app\";\r\n\r\nexport const registerRoute = `${host}/api/register`;\r\n\r\nexport const loginRoute = `${host}/api/login`;\r\n\r\nexport const setAvatarRoute = `${host}/api/setavatar`;\r\n\r\nexport const allUsersRoute = `${host}/api/allusers`;\r\n\r\nexport const sendMessageRoute = `${host}/message/addmsg`;\r\n\r\nexport const getAllMessageRoute = `${host}/message/getallmsg`;\r\n"],"names":["Container","styled","contacts","currentuser","changechat","setIsopen","isOpen","useState","undefined","currentUsername","setcurrentUsername","currentUserimage","setcurrentUserimage","currentSelected","setcurrentSelected","useEffect","username","avatarImage","className","map","contact","index","onClick","changeCurrentChat","src","alt","WelcomeContainer","ChatInputContainer","handleSendMsg","showEmojiPicker","setshowEmojiPicker","msg","setmsg","onEmojiClick","event","emoji","onSubmit","e","preventDefault","length","type","name","id","placeholder","value","onChange","target","autoComplete","LogoutCont","navigate","useNavigate","handleClick","localStorage","clear","Chatcontainer","currentchat","socket","messages","setmessages","arrivalMessage","setarrivalMessage","scrollRef","useRef","getallmessages","axios","getAllMessageRoute","from","_id","to","response","data","fromSelf","message","current","emit","sendMessageRoute","on","prev","scrollIntoView","behaviour","ref","Chats","setcontacts","currentUser","setcurrentUser","currentChat","setcurrentChat","getItem","JSON","parse","useeffectfunc","io","host","isAvatarImageSet","allUsersRoute","useeffectfunca","ToggleSidebar","chat","registerRoute","loginRoute","setAvatarRoute"],"sourceRoot":""}