{"version":3,"file":"static/js/659.dd2f0459.chunk.js","mappings":"kRA+JMA,EAAgBC,EAAAA,GAAAA,IAAU,s7CAgFhC,UAnOiB,WAEf,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA4BC,EAAAA,EAAAA,UAAS,CACnCC,SAAU,GACVC,UAAW,GACXC,aAAc,GACdC,iBAAkB,KAClB,eALKC,EAAM,KAAEC,EAAS,KAQlBC,EAAY,yCAAG,WAAOC,GAAK,oFACR,GAAvBA,EAAMC,kBAEHC,IAAmB,CAAC,EAAF,aAEsB,OAAlCT,EAAsCI,EAAtCJ,SAAWC,EAA2BG,EAA3BH,UAAWC,EAAgBE,EAAhBF,aAAY,SAEpBQ,EAAAA,EAAAA,KAAWC,EAAAA,GAAe,CAC7CX,SAAAA,EAAUC,UAAAA,EAAWC,aAAAA,IACrB,iBAEe,KAJVU,EAAI,EAAJA,MAICC,QACNC,EAAAA,GAAAA,MAAYF,EAAKG,IAAKC,IAEP,IAAdJ,EAAKC,SACNI,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUR,EAAKS,OAC1DxB,EAAS,eACV,2CAGJ,gBApBiB,uCAsBlByB,EAAAA,EAAAA,YAAU,WAELL,aAAaM,QAAQ,kBACtB1B,EAAS,IAGb,GAAG,IAIH,IAAMmB,EAAe,CACnBQ,SAAU,eACVC,UAAW,IACXC,cAAc,EACdC,WAAW,EACXC,MAAO,QAKHnB,EAAkB,WACtB,IAAOT,EAAwDI,EAAxDJ,SAAWC,EAA6CG,EAA7CH,UAAWC,EAAkCE,EAAlCF,aAAcC,EAAoBC,EAApBD,iBAE3C,OAAGH,EAAS6B,OAAO,GACjBf,EAAAA,GAAAA,MAAY,8CAA+CE,IACpD,GAEW,KAAZf,GACNa,EAAAA,GAAAA,MAAY,oBAAqBE,IAC1B,GAEDd,EAAa2B,OAAO,GAC1Bf,EAAAA,GAAAA,MAAY,wDAAyDE,IAC9D,GAEDd,IAAeC,IACrBW,EAAAA,GAAAA,MAAY,+CAAgDE,IACrD,EAKX,EAIMc,EAAe,SAACvB,GACpBF,GAAU,kBAAID,GAAM,cAAEG,EAAMwB,OAAOC,KAAOzB,EAAMwB,OAAOE,QACzD,EAEA,OACE,iCACE,SAACtC,EAAa,WACZ,kBACEuC,SAAU,SAAC3B,GACTD,EAAaC,EACf,EAAE,WAEF,gBAAK4B,UAAU,QAAO,UAEpB,eAAIA,UAAU,aAAY,sBAG5B,kBACEC,KAAK,OACLJ,KAAK,WACLK,GAAG,WACHC,YAAY,WACZC,SAAU,SAACC,GACTV,EAAaU,EACf,KAGF,kBACEJ,KAAK,QACLJ,KAAK,YACLK,GAAG,YACHC,YAAY,QACZC,SAAU,SAACC,GACTV,EAAaU,EACf,KAGF,kBACEJ,KAAK,WACLJ,KAAK,eACLK,GAAG,eACHC,YAAY,WACZC,SAAU,SAACC,GACTV,EAAaU,EACf,KAGF,kBACEJ,KAAK,WACLJ,KAAK,mBACLK,GAAG,mBACHC,YAAY,mBACZC,SAAU,SAACC,GACTV,EAAaU,EACf,KAGA,mBAAQJ,KAAK,SAAQ,uBACrB,2DAAiC,SAAC,KAAI,CAACK,GAAI,SAAS,8BAI1D,SAAC,KAAc,MAGrB,C,wMCxJO,IAAMC,EAAO,iDAEP/B,EAAa,UAAM+B,EAAI,iBAEvBC,EAAU,UAAMD,EAAI,cAEpBE,EAAc,UAAMF,EAAI,kBAExBG,EAAa,UAAMH,EAAI,iBAEvBI,EAAgB,UAAMJ,EAAI,mBAE1BK,EAAkB,UAAML,EAAI,qB","sources":["Pages/Register.jsx","Utils/APIRoutes.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport logo from '../assets/logo.png';\r\nimport { ToastContainer , toast } from \"react-toastify\"; \r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport { registerRoute } from \"../Utils/APIRoutes\";\r\n\r\n\r\n\r\n\r\nconst Register = () => {\r\n\r\n  const navigate = useNavigate(); \r\n\r\n  const [values, setvalues] = useState({\r\n    username: \"\",\r\n    useremail: \"\",\r\n    userpassword: \"\",\r\n    userconfpassword: \"\",\r\n  })\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    if(handleValidation()){\r\n\r\n      const {username , useremail, userpassword} = values;\r\n\r\n      const {data} = await axios.post(registerRoute, {\r\n        username, useremail, userpassword\r\n      })\r\n\r\n      if(data.status===false){\r\n        toast.error(data.msg, toastOptions);\r\n      }\r\n      if(data.status===true){\r\n        localStorage.setItem(\"chat-app-user\", JSON.stringify(data.user));\r\n        navigate(\"/setavatar\");\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n    if(localStorage.getItem(\"chat-app-user\")){\r\n      navigate(\"/\");\r\n    }\r\n  \r\n  }, [])\r\n  \r\n  \r\n  \r\n  const toastOptions = {\r\n    position: \"bottom-right\",\r\n    autoClose: 5000,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"dark\"\r\n  }\r\n\r\n\r\n\r\n  const handleValidation =()=>{\r\n    const {username , useremail, userpassword, userconfpassword} = values;\r\n    \r\n    if(username.length<3){\r\n      toast.error(\"Username should be grater than 3 Characters\", toastOptions)\r\n      return false;\r\n    }\r\n    else if(useremail===\"\"){\r\n      toast.error(\"Email is required\", toastOptions)\r\n      return false;\r\n    }\r\n    else if(userpassword.length<5){\r\n      toast.error(\"Password should be equal or greator than 5 characters\", toastOptions)\r\n      return false;\r\n    }\r\n    else if(userpassword!==userconfpassword){\r\n      toast.error(\"Password and Confirm Password should be same\", toastOptions)\r\n      return false;\r\n    }\r\n    else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const handleChange = (event) => {\r\n    setvalues({...values,[event.target.name]: event.target.value})\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <form\r\n          onSubmit={(event) => {\r\n            handleSubmit(event);\r\n          }}\r\n        >\r\n          <div className=\"brand\">\r\n            {/* <img src={logo} alt=\"Logo\" /> */}\r\n            <h1 className=\"brand_name\">Liffy</h1>\r\n          </div>\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            id=\"username\"\r\n            placeholder=\"Username\"\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n            }}\r\n          />\r\n\r\n          <input\r\n            type=\"email\"\r\n            name=\"useremail\"\r\n            id=\"useremail\"\r\n            placeholder=\"Email\"\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n            }}\r\n          />\r\n\r\n          <input\r\n            type=\"password\"\r\n            name=\"userpassword\"\r\n            id=\"userpassword\"\r\n            placeholder=\"Password\"\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n            }}\r\n          />\r\n\r\n          <input\r\n            type=\"password\"\r\n            name=\"userconfpassword\"\r\n            id=\"userconfpassword\"\r\n            placeholder=\"Confirm Password\"\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n            }}\r\n          />\r\n\r\n            <button type=\"submit\"> Submit </button>\r\n            <span> already have an account ? <Link to={\"/login\"}> Login </Link></span> \r\n\r\n        </form>\r\n      </FormContainer>\r\n      <ToastContainer/>\r\n    </>\r\n  );\r\n};\r\n\r\nconst FormContainer = styled.div`\r\n\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-color: #07070c;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 1rem;\r\n\r\n  .brand{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 1rem;\r\n\r\n    img{\r\n      height: 3rem;\r\n    }\r\n    h1{\r\n      color: white;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n\r\n\r\n  form{\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    background-color: #0000076;\r\n    padding: 3rem 5rem;\r\n    border-radius: 2rem;\r\n\r\n    input{\r\n      background-color: transparent;\r\n      padding: 1rem;\r\n      border: 0.1rem solid #4e0eff;\r\n      border-radius: 0.4rem;\r\n      color: white;\r\n      width: 100%;\r\n      font-size: 1rem;\r\n      &:focus{\r\n        border: 0.1rem solid #997af0;\r\n        outline: none;\r\n      }\r\n    }\r\n    button{\r\n      background-color: #997af0;\r\n      color: white;\r\n      padding: 1rem 2rem;\r\n      border: none;\r\n      font-weight: bold;\r\n      cursor: pointer;\r\n      border-radius: 0.4rem;\r\n      font-size: 1rem;\r\n      text-transform: uppercase;\r\n      transition: 0.5s ease-in-out;\r\n      &:hover{\r\n        background-color: #4e3eff;\r\n      }\r\n    }\r\n\r\n    span{\r\n      color: white;\r\n      text-transform: uppercase;\r\n      text-align: center;\r\n      a{\r\n        color: #4e8eff;\r\n        text-decoration: none;\r\n        font-weight: bold;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n`;\r\n\r\nexport default Register;\r\n","// for developement\r\n// export const host = \"http://localhost:5000\";\r\n\r\n// for deployment\r\n// export const host = \"https://chatapp-72oa.onrender.com\";\r\nexport const host = \"https://chatapi-production-4047.up.railway.app\";\r\n\r\nexport const registerRoute = `${host}/api/register`;\r\n\r\nexport const loginRoute = `${host}/api/login`;\r\n\r\nexport const setAvatarRoute = `${host}/api/setavatar`;\r\n\r\nexport const allUsersRoute = `${host}/api/allusers`;\r\n\r\nexport const sendMessageRoute = `${host}/message/addmsg`;\r\n\r\nexport const getAllMessageRoute = `${host}/message/getallmsg`;\r\n"],"names":["FormContainer","styled","navigate","useNavigate","useState","username","useremail","userpassword","userconfpassword","values","setvalues","handleSubmit","event","preventDefault","handleValidation","axios","registerRoute","data","status","toast","msg","toastOptions","localStorage","setItem","JSON","stringify","user","useEffect","getItem","position","autoClose","pauseOnHover","draggable","theme","length","handleChange","target","name","value","onSubmit","className","type","id","placeholder","onChange","e","to","host","loginRoute","setAvatarRoute","allUsersRoute","sendMessageRoute","getAllMessageRoute"],"sourceRoot":""}